2024-04-02 16:48:29,681 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.9.0
MMCV: 1.5.0
MMCV Compiler: GCC 11.4
MMCV CUDA Compiler: 11.8
MMClassification: 0.15.0+617932d
------------------------------------------------------------

2024-04-02 16:48:29,683 - mmcls - INFO - Distributed training: False
2024-04-02 16:48:29,884 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(type='VGG', depth=16, num_classes=17),
    neck=None,
    head=dict(
        type='ClsHead',
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),
        topk=(1, 5)))
dataset_type = 'Flowers'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=32,
    workers_per_gpu=1,
    train=dict(
        type='Flowers',
        data_prefix='data/flowers/train',
        ann_file='data/flowers/meta/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric='accuracy')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[30, 60, 90])
runner = dict(type='EpochBasedRunner', max_epochs=100)
checkpoint_config = dict(interval=1)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = 'output/vgg16_flowers'
gpu_ids = range(0, 1)

2024-04-02 16:48:31,927 - mmcls - INFO - initialize VGG with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d']}, {'type': 'Constant', 'val': 1.0, 'layer': ['_BatchNorm']}, {'type': 'Normal', 'std': 0.01, 'layer': ['Linear']}]
Name of parameter - Initialization information

backbone.features.0.conv.weight - torch.Size([64, 3, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.0.conv.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.1.conv.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.1.conv.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.3.conv.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.3.conv.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.4.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.4.conv.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.6.conv.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.6.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.7.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.7.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.8.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.8.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.10.conv.weight - torch.Size([512, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.10.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.11.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.11.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.12.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.12.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.14.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.14.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.15.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.15.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.features.16.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.features.16.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.classifier.0.weight - torch.Size([4096, 25088]): 
NormalInit: mean=0, std=0.01, bias=0 

backbone.classifier.0.bias - torch.Size([4096]): 
NormalInit: mean=0, std=0.01, bias=0 

backbone.classifier.3.weight - torch.Size([4096, 4096]): 
NormalInit: mean=0, std=0.01, bias=0 

backbone.classifier.3.bias - torch.Size([4096]): 
NormalInit: mean=0, std=0.01, bias=0 

backbone.classifier.6.weight - torch.Size([17, 4096]): 
NormalInit: mean=0, std=0.01, bias=0 

backbone.classifier.6.bias - torch.Size([17]): 
NormalInit: mean=0, std=0.01, bias=0 
2024-04-02 16:48:56,193 - mmcls - INFO - Start running, host: divtej17@gpu2-comp-111, work_dir: /userhome/cs2/divtej17/Tutorial1/CNN_Image_Classification_Code/output/vgg16_flowers
2024-04-02 16:48:56,194 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2024-04-02 16:48:56,194 - mmcls - INFO - workflow: [('train', 1)], max: 100 epochs
2024-04-02 16:48:56,194 - mmcls - INFO - Checkpoints will be saved to /userhome/cs2/divtej17/Tutorial1/CNN_Image_Classification_Code/output/vgg16_flowers by HardDiskBackend.
2024-04-02 16:49:39,647 - mmcls - INFO - Saving checkpoint at 1 epochs
2024-04-02 16:49:54,063 - mmcls - INFO - Epoch(val) [1][6]	accuracy_top-1: 5.8824, accuracy_top-5: 31.1765
2024-04-02 16:50:05,287 - mmcls - INFO - Saving checkpoint at 2 epochs
2024-04-02 16:50:13,882 - mmcls - INFO - Epoch(val) [2][6]	accuracy_top-1: 13.5294, accuracy_top-5: 52.3529
2024-04-02 16:50:23,589 - mmcls - INFO - Saving checkpoint at 3 epochs
2024-04-02 16:50:31,469 - mmcls - INFO - Epoch(val) [3][6]	accuracy_top-1: 11.7647, accuracy_top-5: 56.4706
2024-04-02 16:50:41,518 - mmcls - INFO - Saving checkpoint at 4 epochs
2024-04-02 16:50:49,208 - mmcls - INFO - Epoch(val) [4][6]	accuracy_top-1: 17.0588, accuracy_top-5: 66.4706
2024-04-02 16:50:59,185 - mmcls - INFO - Saving checkpoint at 5 epochs
2024-04-02 16:51:07,050 - mmcls - INFO - Epoch(val) [5][6]	accuracy_top-1: 12.9412, accuracy_top-5: 69.4118
2024-04-02 16:51:16,662 - mmcls - INFO - Saving checkpoint at 6 epochs
2024-04-02 16:51:24,561 - mmcls - INFO - Epoch(val) [6][6]	accuracy_top-1: 18.8235, accuracy_top-5: 71.7647
2024-04-02 16:51:34,247 - mmcls - INFO - Saving checkpoint at 7 epochs
2024-04-02 16:51:42,235 - mmcls - INFO - Epoch(val) [7][6]	accuracy_top-1: 20.0000, accuracy_top-5: 63.5294
2024-04-02 16:51:52,022 - mmcls - INFO - Saving checkpoint at 8 epochs
2024-04-02 16:52:00,009 - mmcls - INFO - Epoch(val) [8][6]	accuracy_top-1: 18.2353, accuracy_top-5: 68.8235
2024-04-02 16:52:09,730 - mmcls - INFO - Saving checkpoint at 9 epochs
2024-04-02 16:52:17,547 - mmcls - INFO - Epoch(val) [9][6]	accuracy_top-1: 28.8235, accuracy_top-5: 70.0000
2024-04-02 16:52:27,494 - mmcls - INFO - Saving checkpoint at 10 epochs
2024-04-02 16:52:35,521 - mmcls - INFO - Epoch(val) [10][6]	accuracy_top-1: 18.8235, accuracy_top-5: 78.2353
2024-04-02 16:52:45,292 - mmcls - INFO - Saving checkpoint at 11 epochs
2024-04-02 16:52:53,640 - mmcls - INFO - Epoch(val) [11][6]	accuracy_top-1: 34.1176, accuracy_top-5: 76.4706
2024-04-02 16:53:03,493 - mmcls - INFO - Saving checkpoint at 12 epochs
2024-04-02 16:53:11,553 - mmcls - INFO - Epoch(val) [12][6]	accuracy_top-1: 32.9412, accuracy_top-5: 81.1765
2024-04-02 16:53:21,344 - mmcls - INFO - Saving checkpoint at 13 epochs
2024-04-02 16:53:29,403 - mmcls - INFO - Epoch(val) [13][6]	accuracy_top-1: 28.8235, accuracy_top-5: 75.8824
2024-04-02 16:53:39,351 - mmcls - INFO - Saving checkpoint at 14 epochs
2024-04-02 16:53:47,217 - mmcls - INFO - Epoch(val) [14][6]	accuracy_top-1: 28.2353, accuracy_top-5: 84.1176
2024-04-02 16:53:57,010 - mmcls - INFO - Saving checkpoint at 15 epochs
2024-04-02 16:54:05,213 - mmcls - INFO - Epoch(val) [15][6]	accuracy_top-1: 35.8824, accuracy_top-5: 84.7059
2024-04-02 16:54:15,095 - mmcls - INFO - Saving checkpoint at 16 epochs
2024-04-02 16:54:23,352 - mmcls - INFO - Epoch(val) [16][6]	accuracy_top-1: 38.2353, accuracy_top-5: 86.4706
2024-04-02 16:54:33,488 - mmcls - INFO - Saving checkpoint at 17 epochs
2024-04-02 16:54:41,714 - mmcls - INFO - Epoch(val) [17][6]	accuracy_top-1: 33.5294, accuracy_top-5: 84.7059
2024-04-02 16:54:51,480 - mmcls - INFO - Saving checkpoint at 18 epochs
2024-04-02 16:54:59,641 - mmcls - INFO - Epoch(val) [18][6]	accuracy_top-1: 31.1765, accuracy_top-5: 83.5294
2024-04-02 16:55:09,618 - mmcls - INFO - Saving checkpoint at 19 epochs
2024-04-02 16:55:17,969 - mmcls - INFO - Epoch(val) [19][6]	accuracy_top-1: 44.7059, accuracy_top-5: 89.4118
2024-04-02 16:55:27,726 - mmcls - INFO - Saving checkpoint at 20 epochs
2024-04-02 16:55:36,185 - mmcls - INFO - Epoch(val) [20][6]	accuracy_top-1: 40.5882, accuracy_top-5: 85.2941
2024-04-02 16:55:46,097 - mmcls - INFO - Saving checkpoint at 21 epochs
2024-04-02 16:55:54,323 - mmcls - INFO - Epoch(val) [21][6]	accuracy_top-1: 31.7647, accuracy_top-5: 83.5294
2024-04-02 16:56:04,396 - mmcls - INFO - Saving checkpoint at 22 epochs
2024-04-02 16:56:12,348 - mmcls - INFO - Epoch(val) [22][6]	accuracy_top-1: 44.1176, accuracy_top-5: 89.4118
2024-04-02 16:56:22,222 - mmcls - INFO - Saving checkpoint at 23 epochs
2024-04-02 16:56:30,278 - mmcls - INFO - Epoch(val) [23][6]	accuracy_top-1: 41.7647, accuracy_top-5: 85.2941
2024-04-02 16:56:40,013 - mmcls - INFO - Saving checkpoint at 24 epochs
2024-04-02 16:56:48,084 - mmcls - INFO - Epoch(val) [24][6]	accuracy_top-1: 44.1176, accuracy_top-5: 89.4118
2024-04-02 16:56:57,972 - mmcls - INFO - Saving checkpoint at 25 epochs
2024-04-02 16:57:06,258 - mmcls - INFO - Epoch(val) [25][6]	accuracy_top-1: 45.8824, accuracy_top-5: 88.8235
2024-04-02 16:57:16,106 - mmcls - INFO - Saving checkpoint at 26 epochs
2024-04-02 16:57:23,776 - mmcls - INFO - Epoch(val) [26][6]	accuracy_top-1: 42.3529, accuracy_top-5: 85.2941
2024-04-02 16:57:33,670 - mmcls - INFO - Saving checkpoint at 27 epochs
2024-04-02 16:57:41,986 - mmcls - INFO - Epoch(val) [27][6]	accuracy_top-1: 45.8824, accuracy_top-5: 90.0000
2024-04-02 16:57:51,897 - mmcls - INFO - Saving checkpoint at 28 epochs
2024-04-02 16:57:59,874 - mmcls - INFO - Epoch(val) [28][6]	accuracy_top-1: 45.2941, accuracy_top-5: 90.5882
2024-04-02 16:58:10,011 - mmcls - INFO - Saving checkpoint at 29 epochs
2024-04-02 16:58:18,073 - mmcls - INFO - Epoch(val) [29][6]	accuracy_top-1: 37.6471, accuracy_top-5: 88.2353
2024-04-02 16:58:28,132 - mmcls - INFO - Saving checkpoint at 30 epochs
2024-04-02 16:58:36,666 - mmcls - INFO - Epoch(val) [30][6]	accuracy_top-1: 48.8235, accuracy_top-5: 92.9412
2024-04-02 16:58:46,465 - mmcls - INFO - Saving checkpoint at 31 epochs
2024-04-02 16:58:54,327 - mmcls - INFO - Epoch(val) [31][6]	accuracy_top-1: 52.3529, accuracy_top-5: 93.5294
2024-04-02 16:59:04,119 - mmcls - INFO - Saving checkpoint at 32 epochs
2024-04-02 16:59:12,443 - mmcls - INFO - Epoch(val) [32][6]	accuracy_top-1: 54.7059, accuracy_top-5: 95.2941
2024-04-02 16:59:22,609 - mmcls - INFO - Saving checkpoint at 33 epochs
2024-04-02 16:59:30,298 - mmcls - INFO - Epoch(val) [33][6]	accuracy_top-1: 54.7059, accuracy_top-5: 93.5294
2024-04-02 16:59:40,516 - mmcls - INFO - Saving checkpoint at 34 epochs
2024-04-02 16:59:48,903 - mmcls - INFO - Epoch(val) [34][6]	accuracy_top-1: 54.7059, accuracy_top-5: 94.7059
2024-04-02 16:59:58,786 - mmcls - INFO - Saving checkpoint at 35 epochs
2024-04-02 17:00:06,637 - mmcls - INFO - Epoch(val) [35][6]	accuracy_top-1: 53.5294, accuracy_top-5: 95.8824
2024-04-02 17:00:16,666 - mmcls - INFO - Saving checkpoint at 36 epochs
2024-04-02 17:00:24,536 - mmcls - INFO - Epoch(val) [36][6]	accuracy_top-1: 55.2941, accuracy_top-5: 95.8824
2024-04-02 17:00:34,413 - mmcls - INFO - Saving checkpoint at 37 epochs
2024-04-02 17:00:42,275 - mmcls - INFO - Epoch(val) [37][6]	accuracy_top-1: 58.8235, accuracy_top-5: 94.7059
2024-04-02 17:00:52,227 - mmcls - INFO - Saving checkpoint at 38 epochs
2024-04-02 17:01:00,262 - mmcls - INFO - Epoch(val) [38][6]	accuracy_top-1: 57.6471, accuracy_top-5: 94.7059
2024-04-02 17:01:10,055 - mmcls - INFO - Saving checkpoint at 39 epochs
2024-04-02 17:01:17,609 - mmcls - INFO - Epoch(val) [39][6]	accuracy_top-1: 57.6471, accuracy_top-5: 94.7059
2024-04-02 17:01:27,554 - mmcls - INFO - Saving checkpoint at 40 epochs
2024-04-02 17:01:35,518 - mmcls - INFO - Epoch(val) [40][6]	accuracy_top-1: 57.0588, accuracy_top-5: 94.7059
2024-04-02 17:01:45,470 - mmcls - INFO - Saving checkpoint at 41 epochs
2024-04-02 17:01:53,303 - mmcls - INFO - Epoch(val) [41][6]	accuracy_top-1: 58.8235, accuracy_top-5: 95.2941
2024-04-02 17:02:03,094 - mmcls - INFO - Saving checkpoint at 42 epochs
2024-04-02 17:02:11,116 - mmcls - INFO - Epoch(val) [42][6]	accuracy_top-1: 58.8235, accuracy_top-5: 94.7059
2024-04-02 17:02:21,105 - mmcls - INFO - Saving checkpoint at 43 epochs
2024-04-02 17:02:29,718 - mmcls - INFO - Epoch(val) [43][6]	accuracy_top-1: 58.8235, accuracy_top-5: 95.8824
2024-04-02 17:02:40,025 - mmcls - INFO - Saving checkpoint at 44 epochs
2024-04-02 17:02:48,075 - mmcls - INFO - Epoch(val) [44][6]	accuracy_top-1: 60.0000, accuracy_top-5: 94.1176
2024-04-02 17:02:58,045 - mmcls - INFO - Saving checkpoint at 45 epochs
2024-04-02 17:03:06,012 - mmcls - INFO - Epoch(val) [45][6]	accuracy_top-1: 59.4118, accuracy_top-5: 94.1176
2024-04-02 17:03:15,745 - mmcls - INFO - Saving checkpoint at 46 epochs
2024-04-02 17:03:23,285 - mmcls - INFO - Epoch(val) [46][6]	accuracy_top-1: 56.4706, accuracy_top-5: 94.1176
2024-04-02 17:03:33,353 - mmcls - INFO - Saving checkpoint at 47 epochs
2024-04-02 17:03:41,077 - mmcls - INFO - Epoch(val) [47][6]	accuracy_top-1: 59.4118, accuracy_top-5: 94.7059
2024-04-02 17:03:51,372 - mmcls - INFO - Saving checkpoint at 48 epochs
2024-04-02 17:03:59,111 - mmcls - INFO - Epoch(val) [48][6]	accuracy_top-1: 61.1765, accuracy_top-5: 94.7059
2024-04-02 17:04:09,089 - mmcls - INFO - Saving checkpoint at 49 epochs
2024-04-02 17:04:16,963 - mmcls - INFO - Epoch(val) [49][6]	accuracy_top-1: 61.1765, accuracy_top-5: 95.2941
2024-04-02 17:04:27,139 - mmcls - INFO - Saving checkpoint at 50 epochs
2024-04-02 17:04:34,551 - mmcls - INFO - Epoch(val) [50][6]	accuracy_top-1: 58.8235, accuracy_top-5: 96.4706
2024-04-02 17:04:44,295 - mmcls - INFO - Saving checkpoint at 51 epochs
2024-04-02 17:04:51,907 - mmcls - INFO - Epoch(val) [51][6]	accuracy_top-1: 62.3529, accuracy_top-5: 95.8824
2024-04-02 17:05:01,762 - mmcls - INFO - Saving checkpoint at 52 epochs
2024-04-02 17:05:09,693 - mmcls - INFO - Epoch(val) [52][6]	accuracy_top-1: 61.1765, accuracy_top-5: 94.1176
2024-04-02 17:05:19,434 - mmcls - INFO - Saving checkpoint at 53 epochs
2024-04-02 17:05:27,020 - mmcls - INFO - Epoch(val) [53][6]	accuracy_top-1: 64.7059, accuracy_top-5: 94.1176
2024-04-02 17:05:37,010 - mmcls - INFO - Saving checkpoint at 54 epochs
2024-04-02 17:05:45,327 - mmcls - INFO - Epoch(val) [54][6]	accuracy_top-1: 62.9412, accuracy_top-5: 94.7059
2024-04-02 17:05:55,102 - mmcls - INFO - Saving checkpoint at 55 epochs
2024-04-02 17:06:03,236 - mmcls - INFO - Epoch(val) [55][6]	accuracy_top-1: 66.4706, accuracy_top-5: 95.2941
2024-04-02 17:06:13,826 - mmcls - INFO - Saving checkpoint at 56 epochs
2024-04-02 17:06:21,734 - mmcls - INFO - Epoch(val) [56][6]	accuracy_top-1: 61.1765, accuracy_top-5: 92.9412
2024-04-02 17:06:31,540 - mmcls - INFO - Saving checkpoint at 57 epochs
2024-04-02 17:06:39,361 - mmcls - INFO - Epoch(val) [57][6]	accuracy_top-1: 65.8824, accuracy_top-5: 94.1176
2024-04-02 17:06:49,623 - mmcls - INFO - Saving checkpoint at 58 epochs
2024-04-02 17:06:57,571 - mmcls - INFO - Epoch(val) [58][6]	accuracy_top-1: 65.2941, accuracy_top-5: 94.7059
2024-04-02 17:07:08,026 - mmcls - INFO - Saving checkpoint at 59 epochs
2024-04-02 17:07:15,659 - mmcls - INFO - Epoch(val) [59][6]	accuracy_top-1: 64.7059, accuracy_top-5: 95.8824
2024-04-02 17:07:25,571 - mmcls - INFO - Saving checkpoint at 60 epochs
2024-04-02 17:07:33,287 - mmcls - INFO - Epoch(val) [60][6]	accuracy_top-1: 63.5294, accuracy_top-5: 94.1176
2024-04-02 17:07:43,145 - mmcls - INFO - Saving checkpoint at 61 epochs
2024-04-02 17:07:51,486 - mmcls - INFO - Epoch(val) [61][6]	accuracy_top-1: 65.2941, accuracy_top-5: 95.8824
2024-04-02 17:08:01,199 - mmcls - INFO - Saving checkpoint at 62 epochs
2024-04-02 17:08:08,871 - mmcls - INFO - Epoch(val) [62][6]	accuracy_top-1: 65.2941, accuracy_top-5: 95.2941
2024-04-02 17:08:18,810 - mmcls - INFO - Saving checkpoint at 63 epochs
2024-04-02 17:08:26,714 - mmcls - INFO - Epoch(val) [63][6]	accuracy_top-1: 65.2941, accuracy_top-5: 95.2941
2024-04-02 17:08:36,498 - mmcls - INFO - Saving checkpoint at 64 epochs
2024-04-02 17:08:45,118 - mmcls - INFO - Epoch(val) [64][6]	accuracy_top-1: 64.7059, accuracy_top-5: 95.2941
2024-04-02 17:08:54,789 - mmcls - INFO - Saving checkpoint at 65 epochs
2024-04-02 17:09:02,592 - mmcls - INFO - Epoch(val) [65][6]	accuracy_top-1: 67.0588, accuracy_top-5: 95.2941
2024-04-02 17:09:12,348 - mmcls - INFO - Saving checkpoint at 66 epochs
2024-04-02 17:09:20,145 - mmcls - INFO - Epoch(val) [66][6]	accuracy_top-1: 65.2941, accuracy_top-5: 95.2941
2024-04-02 17:09:29,926 - mmcls - INFO - Saving checkpoint at 67 epochs
2024-04-02 17:09:38,399 - mmcls - INFO - Epoch(val) [67][6]	accuracy_top-1: 66.4706, accuracy_top-5: 95.2941
2024-04-02 17:09:48,110 - mmcls - INFO - Saving checkpoint at 68 epochs
2024-04-02 17:09:55,723 - mmcls - INFO - Epoch(val) [68][6]	accuracy_top-1: 68.2353, accuracy_top-5: 95.2941
2024-04-02 17:10:05,522 - mmcls - INFO - Saving checkpoint at 69 epochs
2024-04-02 17:10:13,576 - mmcls - INFO - Epoch(val) [69][6]	accuracy_top-1: 68.2353, accuracy_top-5: 95.2941
2024-04-02 17:10:23,430 - mmcls - INFO - Saving checkpoint at 70 epochs
2024-04-02 17:10:31,911 - mmcls - INFO - Epoch(val) [70][6]	accuracy_top-1: 64.7059, accuracy_top-5: 94.7059
2024-04-02 17:10:41,661 - mmcls - INFO - Saving checkpoint at 71 epochs
2024-04-02 17:10:49,766 - mmcls - INFO - Epoch(val) [71][6]	accuracy_top-1: 64.1176, accuracy_top-5: 95.2941
2024-04-02 17:10:59,499 - mmcls - INFO - Saving checkpoint at 72 epochs
2024-04-02 17:11:07,569 - mmcls - INFO - Epoch(val) [72][6]	accuracy_top-1: 66.4706, accuracy_top-5: 95.2941
2024-04-02 17:11:17,182 - mmcls - INFO - Saving checkpoint at 73 epochs
2024-04-02 17:11:25,164 - mmcls - INFO - Epoch(val) [73][6]	accuracy_top-1: 65.8824, accuracy_top-5: 94.7059
2024-04-02 17:11:35,126 - mmcls - INFO - Saving checkpoint at 74 epochs
2024-04-02 17:11:43,966 - mmcls - INFO - Epoch(val) [74][6]	accuracy_top-1: 67.0588, accuracy_top-5: 94.7059
2024-04-02 17:11:53,744 - mmcls - INFO - Saving checkpoint at 75 epochs
2024-04-02 17:12:02,199 - mmcls - INFO - Epoch(val) [75][6]	accuracy_top-1: 67.6471, accuracy_top-5: 95.8824
2024-04-02 17:12:11,993 - mmcls - INFO - Saving checkpoint at 76 epochs
2024-04-02 17:12:21,118 - mmcls - INFO - Epoch(val) [76][6]	accuracy_top-1: 66.4706, accuracy_top-5: 95.2941
2024-04-02 17:12:32,360 - mmcls - INFO - Saving checkpoint at 77 epochs
2024-04-02 17:12:40,244 - mmcls - INFO - Epoch(val) [77][6]	accuracy_top-1: 66.4706, accuracy_top-5: 94.7059
